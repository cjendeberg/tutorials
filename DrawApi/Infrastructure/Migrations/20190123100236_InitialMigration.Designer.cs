// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zero99Lotto.SRC.Services.Draws.API.Infrastructure.EF;

namespace Zero99Lotto.SRC.Services.Draws.API.Infrastructure.Migrations
{
    [DbContext(typeof(DrawContext))]
    [Migration("20190123100236_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.Entities.Drawing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("Completed");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("ScheduleId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Drawing");
                });

            modelBuilder.Entity("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<TimeSpan>("StartTime");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.ValueObjects.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfWeek");

                    b.Property<Guid?>("ScheduleId");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleDays");
                });

            modelBuilder.Entity("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.ValueObjects.Number", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("DrawingId");

                    b.Property<bool>("Extra");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("DrawingId");

                    b.ToTable("DrawingNumbers");
                });

            modelBuilder.Entity("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.Entities.Drawing", b =>
                {
                    b.HasOne("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.Entities.Schedule")
                        .WithMany("Drawings")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.ValueObjects.Day", b =>
                {
                    b.HasOne("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.Entities.Schedule")
                        .WithMany("Days")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.ValueObjects.Number", b =>
                {
                    b.HasOne("Zero99Lotto.SRC.Services.Draws.API.Core.Domain.Entities.Drawing")
                        .WithMany("Numbers")
                        .HasForeignKey("DrawingId");
                });
#pragma warning restore 612, 618
        }
    }
}
